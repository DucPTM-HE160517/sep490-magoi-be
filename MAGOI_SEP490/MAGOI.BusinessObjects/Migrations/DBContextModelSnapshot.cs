// <auto-generated />
using System;
using MAGOI.BusinessObjects.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MAGOI.BusinessObjects.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MAGOI.BusinessObjects.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FoodCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3667),
                            Description = "Một tách cà phê đen đậm đà, nguyên chất từ hạt cà phê Arabica.",
                            FoodCategoryId = 1,
                            Name = "Cà phê đen",
                            Price = 30000f,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3671),
                            Description = "Trà xanh kết hợp với hương vị bưởi tự nhiên, thơm ngon và thanh mát.",
                            FoodCategoryId = 1,
                            Name = "Trà bưởi",
                            Price = 25000f,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3673),
                            Description = "Gà quay thơm ngon, phục vụ cùng cơm trắng và xốt đậm đà.",
                            FoodCategoryId = 2,
                            Name = "Cơm gà Hải Nam",
                            Price = 60000f,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3674),
                            Description = "Một phần bún nước dùng đậm đà kết hợp với thịt bò, huyết và chả.",
                            FoodCategoryId = 2,
                            Name = "Bún bò Huế",
                            Price = 50000f,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3675),
                            Description = "Một loại bánh ngọt với hương vị cà phê đặc trưng và kem tươi mịn.",
                            FoodCategoryId = 3,
                            Name = "Bánh tiramisu",
                            Price = 40000f,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3677),
                            Description = "Chè truyền thống Việt Nam với đậu xanh, nước cốt dừa và đường ",
                            FoodCategoryId = 3,
                            Name = "Chè đậu xanh",
                            Price = 35000f,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3678),
                            Description = "Bánh mì mỏng, nướng giòn kết hợp với thịt, rau sống và sốt mỡ.",
                            FoodCategoryId = 4,
                            Name = "Bánh mì kẹp thịt",
                            Price = 40000f,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3680),
                            Description = "Một phần salad phong cách Cesar với rau, phô mai và sốt đặc trưng.",
                            FoodCategoryId = 4,
                            Name = "Salad Cesar",
                            Price = 45000f,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3681),
                            Description = "Một tô phở nước dùng từ xương gà, kèm theo thịt gà và gia vị.",
                            FoodCategoryId = 5,
                            Name = "Canh chua cá",
                            Price = 55000f,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3683),
                            Description = "Canh chua với chất axit nhẹ từ dấm, ngọt từ cá và thơm từ rau sống.",
                            FoodCategoryId = 5,
                            Name = "Phở gà",
                            Price = 45000f,
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("MAGOI.BusinessObjects.Models.FoodCategory", b =>
                {
                    b.Property<int>("FoodCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FoodCategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FoodCategoryId");

                    b.ToTable("FoodCategories");

                    b.HasData(
                        new
                        {
                            FoodCategoryId = 1,
                            Description = "Danh mục này bao gồm các loại đồ uống như cà phê, trà, nước ép, nước ngọt và các loại thức uống khác.\r\n",
                            Name = "Đồ uống"
                        },
                        new
                        {
                            FoodCategoryId = 2,
                            Description = "Đây là danh mục chứa các món ăn chính, thường là các món có thịt, cá hoặc rau củ.",
                            Name = "Món chính"
                        },
                        new
                        {
                            FoodCategoryId = 3,
                            Description = "Danh mục này bao gồm các loại tráng miệng như bánh ngọt, kem, hoa quả hay các món tráng miệng truyền thống.",
                            Name = "Món tráng miệng"
                        },
                        new
                        {
                            FoodCategoryId = 4,
                            Description = "Đây là danh mục chứa các món ăn nhẹ như salad, canapé, bánh mì, hoặc các món ăn nhẹ dùng như bữa ăn phụ.",
                            Name = "Món nhẹ"
                        },
                        new
                        {
                            FoodCategoryId = 5,
                            Description = "Danh mục này bao gồm các loại món ăn được chế biến từ nước, chẳng hạn như các món canh, súp, hoặc mì nước.",
                            Name = "Món nước"
                        });
                });

            modelBuilder.Entity("MAGOI.BusinessObjects.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Hotline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Address = "80B P. Mã Mây, Phố cổ Hà Nội, Hoàn Kiếm, Hà Nội 100000, Việt Nam",
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3476),
                            Email = "hncuisine@gmail.com",
                            Hotline = "0866168021",
                            Name = "Hanoi Cuisine 1925"
                        },
                        new
                        {
                            RestaurantId = 2,
                            Address = "9 Đinh Tiên Hoàng, Hàng Trống, Hoàn Kiếm, Hà Nội",
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3487),
                            Email = "vncuisine@gmail.com",
                            Hotline = "099977584",
                            Name = "Vietnamese Cuisine Restaurant"
                        },
                        new
                        {
                            RestaurantId = 3,
                            Address = "Sheraton Hotel, K5 Nghi Tam, Road, 11 Đ. Xuân Diệu, Quảng An, Tây Hồ, Hà Nội, Việt Nam",
                            CreatedAt = new DateTime(2024, 1, 10, 8, 48, 47, 896, DateTimeKind.Local).AddTicks(3489),
                            Email = "sheratonhanoi@gmail.com",
                            Hotline = "0903420955",
                            Name = "Oven d'Or Restaurant"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
